server {
        listen 128.199.122.79:80;
        listen 128.199.122.79:443 ssl spdy;

        include /etc/nginx/h5bp/directive-only/ssl.conf;
        include /etc/nginx/h5bp/directive-only/ssl-stapling.conf;
        include /etc/nginx/h5bp/directive-only/spdy.conf;
        include /etc/nginx/h5bp/directive-only/extra-security.conf;

#	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_certificate /var/www/clients/client0/web1/ssl/bits.co.id.crt;
        ssl_certificate_key /var/www/clients/client0/web1/ssl/bits.co.id.key;

#	pagespeed SslCertDirectory /var/www/clients/client0/web1/ssl/;
#	pagespeed SslCertFile /var/www/clients/client0/web1/ssl/bits.co.id.crt;
#	pagespeed RespectXForwardedProto on;

	pagespeed MapOriginDomain "http://bits.co.id" "https://bits.co.id";
	pagespeed FetchHttps enable,allow_self_signed;

        server_name bits.co.id ;
        root   /var/www/bits.co.id/web;
        index index.html index.htm index.php index.cgi index.pl index.xhtml;

        add_header Pragma "public";
        add_header Cache-Control "max-age=31536000, public, must-revalidate, proxy-revalidate";
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

	location ~ ".pagespeed.([a-z].)?[a-z]{2}.[^.]{10}.[^.]+" { }
        location ~ "^/pagespeed_static/" { }
        location ~ "^/ngx_pagespeed_beacon$" { }
        location /ngx_pagespeed_statistics { allow 127.0.0.1; deny all; }
        location /ngx_pagespeed_global_statistics { allow 127.0.0.1; deny all; }
        location /ngx_pagespeed_message { allow 127.0.0.1; deny all; }
        location /pagespeed_console { allow 127.0.0.1; deny all; }
        location /pagespeed_admin { allow 127.0.0.1; deny all; }

	location / {
	        root   /var/www/bits.co.id/web;
	        try_files $uri $uri/ /index.php;
	}
	
	if (!-e $request_filename)
	{
	    rewrite ^/(.*)$ /index.php?/$1 break;
	    break;
	}
	rewrite themes/.*/(layouts|pages|partials)/.*.htm /index.php break;
	rewrite uploads/protected/.* /index.php break;
	rewrite app/.* /index.php break;

	try_files $uri $uri/ /index.php;

        location ~ \.shtml$ {
            ssi on;
        }

    	if ($scheme = http) {
	    return 301 https://$server_name$request_uri;
	}

        error_log /var/log/ispconfig/httpd/bits.co.id/error.log;
        access_log /var/log/ispconfig/httpd/bits.co.id/access.log combined;

        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }
	
	location ^~ /webmail/data { 
	    deny all; 
	}

        location ^~ /filemanager/data {
            deny all;
        }
        
	location /stats/ {
            index index.html index.php;
            auth_basic "Members Only";
            auth_basic_user_file /var/www/clients/client0/web1/web/stats/.htpasswd_stats;
        }

        location ^~ /awstats-icon {
            alias /usr/share/awstats/icon;
        }

	include /etc/nginx/h5bp/basic.conf;
	include /home/script/statis.conf;

        location ~ \.php$ {
	    root   /var/www/bits.co.id/web;
            try_files $uri =404;
            include /etc/nginx/fastcgi_params;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass unix:/var/lib/php5-fpm/web1.sock;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_intercept_errors on;
        }

        location /cgi-bin/ {
            try_files $uri =404;
            include /etc/nginx/fastcgi_params;
            root /var/www/clients/client0/web1;
            gzip off;
            fastcgi_pass  unix:/var/run/fcgiwrap.socket;
            fastcgi_index index.cgi;
            fastcgi_param SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            fastcgi_intercept_errors on;
        }

	location ~* \.html$ {
	  expires -1;
	}

	location ~* \.(css|js|gif|jpe?g|png)$ {
	  expires 360h;	
	  add_header Pragma public;
	  add_header Cache-Control "public, must-revalidate, proxy-revalidate";
	}
}
